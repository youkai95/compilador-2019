.data
Object: .asciiz "Object"
Int: .asciiz "Int"
String: .asciiz "String"
Bool: .asciiz "Bool"
IO: .asciiz "IO"
Void: .asciiz "Void"
A: .asciiz "A"
B: .asciiz "B"
C: .asciiz "C"
Main: .asciiz "Main"

.text
    la $t0, ($gp)
    la $t1, A
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    la $t2, A_factorial
    sw $t2, 16($t0)
    add $t0, $t0, 20
    la $t1, B
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    la $t2, A_factorial
    sw $t2, 16($t0)
    la $t2, B_print
    sw $t2, 20($t0)
    add $t0, $t0, 24
    la $t1, C
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    la $t2, A_factorial
    sw $t2, 16($t0)
    la $t2, B_print
    sw $t2, 20($t0)
    add $t0, $t0, 24
    la $t1, Main
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    la $t2, IO_in_string
    sw $t2, 16($t0)
    la $t2, IO_in_int
    sw $t2, 20($t0)
    la $t2, IO_out_string
    sw $t2, 24($t0)
    la $t2, IO_out_int
    sw $t2, 28($t0)
    la $t2, Main_main
    sw $t2, 32($t0)
    add $t0, $t0, 36
    la $t1, Object
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    add $t0, $t0, 16
    la $t1, Int
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    add $t0, $t0, 16
    la $t1, String
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    la $t2, String_substring
    sw $t2, 16($t0)
    la $t2, String_length
    sw $t2, 20($t0)
    la $t2, String_concat
    sw $t2, 24($t0)
    add $t0, $t0, 28
    la $t1, Bool
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    add $t0, $t0, 16
    la $t1, IO
    sw $t1, 4($t0)
    la $t2, Object_abort
    sw $t2, 8($t0)
    la $t2, Object_type_name
    sw $t2, 12($t0)
    la $t2, IO_in_string
    sw $t2, 16($t0)
    la $t2, IO_in_int
    sw $t2, 20($t0)
    la $t2, IO_out_string
    sw $t2, 24($t0)
    la $t2, IO_out_int
    sw $t2, 28($t0)
    add $t0, $t0, 32
    la $t0, ($gp)
    la $t2, ($gp)
    li $t1, 104
    add $t1, $t1, $t2
    sw $t1, ($t0)
    add $t0, $t0, 20
    li $t1, 0
    add $t1, $t1, $t2
    sw $t1, ($t0)
    add $t0, $t0, 24
    li $t1, 20
    add $t1, $t1, $t2
    sw $t1, ($t0)
    add $t0, $t0, 24
    li $t1, 180
    add $t1, $t1, $t2
    sw $t1, ($t0)
    add $t0, $t0, 36
    li $t1, 0
    sw $t1, ($t0)
    add $t0, $t0, 16
    li $t1, 104
    add $t1, $t1, $t2
    sw $t1, ($t0)
    add $t0, $t0, 16
    li $t1, 104
    add $t1, $t1, $t2
    sw $t1, ($t0)
    add $t0, $t0, 28
    li $t1, 104
    add $t1, $t1, $t2
    sw $t1, ($t0)
    add $t0, $t0, 16
    li $t1, 104
    add $t1, $t1, $t2
    sw $t1, ($t0)
    add $t0, $t0, 32
    li $a0, 128
    li $v0, 9
    syscall
    sw $v0, 212($gp)

entry:

    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    li $a0, 8
    li $v0, 9
    syscall
    sw $v0, 12($sp)
    la $t1, 68($gp)
    sw $t1, 8($sp)
    lw $t2, 8($sp)
    subu $sp, $sp, 12
    sw $ra, 8($sp)
    ld $t0, 20($sp)
    sd $t0, 0($sp)
    lw $t0, 32($t2)
    jalr $t0
    lw $ra, 8($sp)
    addu $sp, $sp, 12
    sd $v0, 0($sp)
    li $v0, 10
    xor $a0, $a0, $a0
    syscall
    addu $sp, $sp, 16
    jr $ra

A_factorial:

    subu $sp, $sp, 72
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)
    li $t0, 0
    sw $t0, 16($sp)
    sw $t0, 20($sp)
    li $t0, 0
    sw $t0, 24($sp)
    sw $t0, 28($sp)
    li $t0, 0
    sw $t0, 32($sp)
    sw $t0, 36($sp)
    li $t0, 0
    sw $t0, 40($sp)
    sw $t0, 44($sp)
    li $t0, 0
    sw $t0, 48($sp)
    sw $t0, 52($sp)
    li $t0, 0
    sw $t0, 56($sp)
    sw $t0, 60($sp)
    li $t0, 0
    sw $t0, 64($sp)
    sw $t0, 68($sp)

    lw $t1, 76($sp)
    li $t2, 2
    slt $t0, $t1, $t2
    la $t1, 164($gp)
    sw $t1, 8($sp)
    sw $t0, 12($sp)
    lw $t0 12($sp)
    beq $t0, 1, label_1
    li $t2, 1
    lw $t1, 76($sp)
    sub $t1, $t1, $t2
    la $t0, 120($gp)
    sd $t0, 48($sp)
    lw $t2, 80($sp)
    subu $sp, $sp, 20
    sw $ra, 16($sp)
    ld $t0, 100($sp)
    sd $t0, 8($sp)
    ld $t0, 68($sp)
    sd $t0, 0($sp)
    lw $t0, 16($t2)
    jalr $t0
    lw $ra, 16($sp)
    addu $sp, $sp, 20
    sd $v0, 32($sp)
    lw $t2, 36($sp)
    lw $t1, 76($sp)
    mulo $t1, $t1, $t2
    la $t0, 120($gp)
    sd $t0, 56($sp)
    ld $t0, 56($sp)
    sd $t0, 16($sp)
    j label_2
label_1:
    ld $t0, 72($sp)
    sd $t0, 16($sp)
label_2:
    ld $v0, 16($sp)
    addu $sp, $sp, 72
    jr $ra

B_print:

    subu $sp, $sp, 24
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)
    li $t0, 0
    sw $t0, 16($sp)
    sw $t0, 20($sp)

    li $a0, 0
    li $v0, 9
    syscall
    sw $v0, 12($sp)
    la $t1, 180($gp)
    sw $t1, 8($sp)
    lw $t2, 8($sp)
    subu $sp, $sp, 20
    sw $ra, 16($sp)
    ld $t0, 28($sp)
    sd $t0, 8($sp)
    ld $t0, 44($sp)
    sd $t0, 0($sp)
    lw $t0, 28($t2)
    jalr $t0
    lw $ra, 16($sp)
    addu $sp, $sp, 20
    sd $v0, 0($sp)
    ld $v0, 0($sp)
    addu $sp, $sp, 24
    jr $ra

Main_main:

    subu $sp, $sp, 184
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)
    li $t0, 0
    sw $t0, 16($sp)
    sw $t0, 20($sp)
    li $t0, 0
    sw $t0, 24($sp)
    sw $t0, 28($sp)
    li $t0, 0
    sw $t0, 32($sp)
    sw $t0, 36($sp)
    li $t0, 0
    sw $t0, 40($sp)
    sw $t0, 44($sp)
    li $t0, 0
    sw $t0, 48($sp)
    sw $t0, 52($sp)
    li $t0, 0
    sw $t0, 56($sp)
    sw $t0, 60($sp)
    li $t0, 0
    sw $t0, 64($sp)
    sw $t0, 68($sp)
    li $t0, 0
    sw $t0, 72($sp)
    sw $t0, 76($sp)
    li $t0, 0
    sw $t0, 80($sp)
    sw $t0, 84($sp)
    li $t0, 0
    sw $t0, 88($sp)
    sw $t0, 92($sp)
    li $t0, 0
    sw $t0, 96($sp)
    sw $t0, 100($sp)
    li $t0, 0
    sw $t0, 104($sp)
    sw $t0, 108($sp)
    li $t0, 0
    sw $t0, 112($sp)
    sw $t0, 116($sp)
    li $t0, 0
    sw $t0, 120($sp)
    sw $t0, 124($sp)
    li $t0, 0
    sw $t0, 128($sp)
    sw $t0, 132($sp)
    li $t0, 0
    sw $t0, 136($sp)
    sw $t0, 140($sp)
    li $t0, 0
    sw $t0, 144($sp)
    sw $t0, 148($sp)
    li $t0, 0
    sw $t0, 152($sp)
    sw $t0, 156($sp)
    li $t0, 0
    sw $t0, 160($sp)
    sw $t0, 164($sp)
    li $t0, 0
    sw $t0, 168($sp)
    sw $t0, 172($sp)
    li $t0, 0
    sw $t0, 176($sp)
    sw $t0, 180($sp)

    li $a0, 0
    li $v0, 9
    syscall
    sw $v0, 12($sp)
    la $t1, 0($gp)
    sw $t1, 8($sp)
    ld $t0, 8($sp)
    sd $t0, 0($sp)
    li $a0, 0
    li $v0, 9
    syscall
    sw $v0, 28($sp)
    la $t1, 20($gp)
    sw $t1, 24($sp)
    ld $t0, 24($sp)
    sd $t0, 16($sp)
    li $a0, 0
    li $v0, 9
    syscall
    sw $v0, 44($sp)
    la $t1, 44($gp)
    sw $t1, 40($sp)
    ld $t0, 40($sp)
    sd $t0, 32($sp)
    li $a0, 0
    li $v0, 9
    syscall
    sw $v0, 60($sp)
    la $t1, 104($gp)
    sw $t1, 56($sp)
    ld $t0, 56($sp)
    sd $t0, 48($sp)
    ld $t0, 16($sp)
    sd $t0, 48($sp)
    la $a0, 104($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_4
    la $a0, 0($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_11
    la $a0, 20($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_16
    la $a0, 44($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_19
    j label_3
label_4:
    li $t0 1
    beq $t0, 1, label_5
label_6:
    li $t0 1
    beq $t0, 1, label_7
label_8:
    li $t0 1
    beq $t0, 1, label_9
label_10:
    j label_20
label_11:
    li $t0 1
    beq $t0, 1, label_12
label_13:
    li $t0 1
    beq $t0, 1, label_14
label_15:
    j label_21
label_16:
    li $t0 1
    beq $t0, 1, label_17
label_18:
    j label_22
label_19:
    j label_23
label_5:
    la $a0, 0($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_11
    j label_6
label_7:
    la $a0, 20($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_16
    j label_8
label_9:
    la $a0, 44($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_19
    j label_10
label_12:
    la $a0, 20($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_16
    j label_13
label_14:
    la $a0, 44($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_19
    j label_15
label_17:
    la $a0, 44($gp)
    lw $a1, 48($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal check_hierarchy
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 164($gp)
    sw $t1, 80($sp)
    sw $v0, 84($sp)
    lw $t0 84($sp)
    beq $t0, 1, label_19
    j label_18
label_20:
    ld $t0, 48($sp)
    sd $t0, 96($sp)
    li $a0, 0
    li $v0, 9
    syscall
    sw $v0, 108($sp)
    la $t1, 0($gp)
    sw $t1, 104($sp)
    lw $t0, 188($sp)
    ld $t1, 104($sp)
    sd $t1, 0($t0)
    ld $t0, 104($sp)
    sd $t0, 88($sp)
    j label_3
label_21:
    ld $t0, 48($sp)
    sd $t0, 112($sp)
    lw $t0, 188($sp)
    ld $t1, 112($sp)
    sd $t1, 0($t0)
    ld $t0, 112($sp)
    sd $t0, 88($sp)
    j label_3
label_22:
    ld $t0, 48($sp)
    sd $t0, 128($sp)
    lw $t0, 188($sp)
    ld $t1, 128($sp)
    sd $t1, 0($t0)
    ld $t0, 128($sp)
    sd $t0, 88($sp)
    j label_3
label_23:
    ld $t0, 48($sp)
    sd $t0, 144($sp)
    lw $t0, 188($sp)
    ld $t1, 144($sp)
    sd $t1, 0($t0)
    ld $t0, 144($sp)
    sd $t0, 88($sp)
    j label_3
label_3:
    lw $t0, 188($sp)
    ld $t1, 0($t0)
    sd $t1, 176($sp)
    lw $t2, 176($sp)
    subu $sp, $sp, 12
    sw $ra, 8($sp)
    ld $t0, 188($sp)
    sd $t0, 0($sp)
    lw $t0, 12($t2)
    jalr $t0
    lw $ra, 8($sp)
    addu $sp, $sp, 12
    sd $v0, 168($sp)
    lw $t2, 184($sp)
    subu $sp, $sp, 20
    sw $ra, 16($sp)
    ld $t0, 204($sp)
    sd $t0, 8($sp)
    ld $t0, 188($sp)
    sd $t0, 0($sp)
    lw $t0, 24($t2)
    jalr $t0
    lw $ra, 16($sp)
    addu $sp, $sp, 20
    sd $v0, 160($sp)
    ld $v0, 160($sp)
    addu $sp, $sp, 184
    jr $ra

String_substring:

    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    lw $a0, 36($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal length
    lw $ra, ($sp)
    addu $sp, $sp, 4
    lw $t0, 28($sp)
    blt $t0, 0, error
    lw $t1, 20($sp)
    blt $t1, 0, error
    add $t0, $t0, $t1
    blt $v0, $t0, error
    li $v0, 9
    lw $a0, 20($sp)
    add $a0, $a0, 1
    syscall
    la $a3, ($v0)
    lw $a0, 36($sp)
    lw $a1, 28($sp)
    lw $a2, 20($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal substring
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t1, 136($gp)
    sw $t1, 8($sp)
    sw  $v0, 12($sp)
    ld $v0, 8($sp)
    addu $sp, $sp, 16
    jr $ra

String_length:

    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    lw $a0, 20($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal length
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t0, 120($gp)
    sw $t0, 8($sp)
    sw $v0, 12($sp)
    ld $v0, 8($sp)
    addu $sp, $sp, 16
    jr $ra

String_concat:

    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    lw $a0, 28($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal length
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t0, ($v0)
    lw $a0, 20($sp)
    subu $sp, $sp, 8
    sw $ra, 4($sp)
    sw $t0, ($sp)
    jal length
    lw $t0, ($sp)
    lw $ra, 4($sp)
    addu $sp, $sp, 8
    la $a0, ($v0)
    addu $a0, $a0, $t0
    addu $a0, $a0, 1
    li $v0, 9
    syscall
    la $a2, ($v0)
    lw $a0, 28($sp)
    lw $a1, 20($sp)
    subu $sp, $sp, 4
    sw $ra, ($sp)
    jal concat
    lw $ra, ($sp)
    addu $sp, $sp, 4
    la $t0, 136($gp)
    sw $t0, 8($sp)
    sw  $v0, 12($sp)
    ld $v0, 8($sp)
    addu $sp, $sp, 16
    jr $ra

Object_type_name:

    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    lw $t1, 16($sp)
    lw $t1, 4($t1)
    la $t0, 136($gp)
    sd $t0, 8($sp)
    ld $v0, 8($sp)
    addu $sp, $sp, 16
    jr $ra

IO_in_string:
    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    lw $a0, 212($gp)
    li $a1, 128
    li $v0, 8
    syscall
    subu $sp, $sp, 8
    sw $ra, 4($sp)
    sw $a0, ($sp)
    jal length
    lw $a0, ($sp)
    lw $ra, 4($sp)
    addu $sp, $sp, 8
    la $t0, ($a0)
    la $t1, ($v0)
    la $a0, ($v0)
    li $v0, 9
    syscall
    la $a0, ($t0)
    li $a1, 0
    la $a2, ($t1)
    la $a3, ($v0)
    subu $sp, $sp, 8
    sw $ra, ($sp)
    jal substring
    lw $ra, ($sp)
    addu $sp, $sp, 8
    la $t0, 136($gp)
    sw $t0, 8($sp)
    sw $v0, 12($sp)
    ld $v0, 8($sp)
    addu $sp, $sp, 16
    jr $ra

IO_in_int:
    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    li $v0, 5
    syscall
    sw $v0, 12($sp)
    la $t0, 120($gp)
    sw $t0, 8($sp)
    ld $v0, 8($sp)
    addu $sp, $sp, 16
    jr $ra

IO_out_string:

    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    li $v0, 4
    lw $a0, 20($sp)
syscall
    ld $v0, 8($sp)
    ld $v0, 8($sp)
    addu $sp, $sp, 16
    jr $ra

IO_out_int:

    subu $sp, $sp, 16
    li $t0, 0
    sw $t0, 0($sp)
    sw $t0, 4($sp)
    li $t0, 0
    sw $t0, 8($sp)
    sw $t0, 12($sp)

    li $v0, 1
    lw $a0, 20($sp)
syscall
    ld $v0, 8($sp)
    ld $v0, 8($sp)
    addu $sp, $sp, 16
    jr $ra

Object_abort:

    subu $sp, $sp, 0
    li $v0, 10
    xor $a0, $a0, $a0
    syscall
    addu $sp, $sp, 0
    jr $ra
    length:
    xor $t0, $t0, $t0
    xor $t1, $t1, $t1
    xor $v0, $v0, $v0
    loop_length:
    lb $t0, ($a0)
    beq $t0, $t1, end_length
    addu $v0, $v0, 1
    addu $a0, $a0, 1
    j loop_length
    end_length:
    jr $ra
    concat:
    xor $t0, $t0, $t0
    xor $t1, $t1, $t1
    loop_concat1:
    lb $t0, ($a0)
    beq $t0, $t1, concat2
    sb $t0, ($a2)
    add $a0, $a0, 1
    add $a2, $a2, 1
    j loop_concat1
    concat2:
    loop_concat2:
    lb $t0, ($a1)
    beq $t0, $t1, end_concat
    sb $t0, ($a2)
    add $a1, $a1, 1
    add $a2, $a2, 1
    j loop_concat2
    end_concat:
    sb $t1, ($a2)
    jr $ra
substring:
    xor $t1, $t1, $t1
    add $a0, $a0, $a1
write_substring:
    lb $t0, ($a0)
    beq $a2, $t1, end_substring
    sb $t0, ($a3)
    add $a0, $a0, 1
    add $a3, $a3, 1
    subu $a2, $a2, 1
    j write_substring
end_substring:
    sb $t1, ($a3)
    jr $ra
    check_hierarchy:
    la $t0, ($a0)
    la $t1, ($a1)
    xor $t2, $t2, $t2
    beq $t0, $t1, goodend_check_hierarchy
    loop_check_hierarchy:
    lw $t1, ($t1)
    beq $t1, $t2, badend_check_hierarchy
    beq $t0, $t1, goodend_check_hierarchy
    j loop_check_hierarchy
    badend_check_hierarchy:
    li $v0, 0
    jr $ra
    goodend_check_hierarchy:
    li $v0, 1
    jr $ra
    error:
    break 0
